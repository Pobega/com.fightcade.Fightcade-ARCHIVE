app-id: com.fightcade.Fightcade
base: org.electronjs.Electron2.BaseApp
base-version: "19.08"
runtime: org.freedesktop.Platform
runtime-version: "20.08"
sdk: org.freedesktop.Sdk
command: fightcade
tags:
  - proprietary

sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386

build-options:
  cflags:
    - "-O2 -g -fstack-protector-strong -D_FORTIFY_SOURCE=2"
  cxxflags:
    - "-O2 -g -fstack-protector-strong -D_FORTIFY_SOURCE=2"
  prefix: /app
  prepend-path: /app/bin
  strip: true
  make-args:
    - --silent

finish-args:
  - --share=ipc
  - --socket=x11
  - --share=network
  - --socket=pulseaudio
  - --env=LD_LIBRARY_PATH=/app/lib:/app/lib32
  - --allow=multiarch

modules:
  - name: fightcade
    buildsystem: simple
    sources:
      - type: archive
        url: https://web.fightcade.com/download/Fightcade-linux-latest.tar.gz
        sha256: 6d89b806fc270c7e5dc6cf9035fb549ce746f676b8c3876eba55b0c62c9ee9cc
    build-commands:
      # Fightcade launcher
      - install -Dm755 Fightcade.desktop /app/share/applications/com.fightcade.Fightcade.desktop
      - desktop-file-edit --set-key=Comment --set-value="Play arcade games online" /app/share/applications/com.fightcade.Fightcade.desktop
      - desktop-file-edit --set-key=Exec --set-value=/app/bin/fightcade /app/share/applications/com.fightcade.Fightcade.desktop
      - desktop-file-edit --set-key=Icon --set-value=/app/fightcade/fc2-electron/resources/app/icon.png /app/share/applications/com.fightcade.Fightcade.desktop
      # Place entire Fightcade zip contents in /app/fightcade
      - mkdir -p /app/fightcade
      - mv * /app/fightcade
    post-install:
      - echo "~+~+~+~+~+~+~+~"
      - pwd
      - ls ..
      - echo "~+~+~+~+~+~+~+~"
      - ls ../..

  - name: fightcade-launcher
    buildsystem: simple
    sources:
      - type: file
        path: fightcade-launcher.sh
    build-commands:
      - install -Dm755 fightcade-launcher.sh /app/bin/fightcade
    post-install:
      - echo "~+~+~+~+~+~+~+~"
      - pwd
      - ls ..

  - name: wine-wow64
    only-arches:
      - x86_64
    modules:
      - name: wine64-base
        builddir: true
        build-options:
          arch:
            x86_64:
              config-opts:
                - --enable-win64
              libdir: /app/lib
        config-opts: &wine_common_opts
          - --silent
          - --disable-win16
          - --disable-tests
          - --with-x
          - --with-pulse
          - --with-dbus
          - --without-hal
          - --without-oss
        make-install-args: &wine_common_make_install_args
          - LDCONFIG=/bin/true
          - STRIP=/bin/true
          - UPDATE_DESKTOP_DATABASE=/bin/true
        sources: &wine_sources
          - type: git
            url: "https://github.com/wine-mirror/wine.git"
            commit: 6ed1d04b1325d4c2480907b76b8b1d5529caebab
            tag: wine-5.0.1
        post-install:
          - echo "~+~+~+~+~+~+~+~"
          - pwd
          - ls ..
          - echo "~+~+~+~+~+~+~+~"
          - ls ../..
          - echo "~+~+~+~+~+~+~+~"
    build-options:
      arch:
        x86_64:
          config-opts:
            - --with-wine64=/run/build/wine64-base/_flatpak_build
            # Might be this?
            # https://github.com/winepak/winepak-sdk/blob/2ad32c34d8fc376ddaa0f7811a76a0e213921c02/org.winepak.Sdk-staging.json#L128
            #- --with-wine64=../../wine64-base/_flatpak_build
          prepend-pkg-config-path: /app/lib32/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig
          ldflags: -L/app/lib32
          append-path: /usr/lib/sdk/toolchain-i386/bin
          env:
            CC: i686-unknown-linux-gnu-gcc
            CXX: i686-unknown-linux-gnu-g++
          libdir: /app/lib32
    config-opts: *wine_common_opts
    make-install-args: *wine_common_make_install_args
    sources: *wine_sources
